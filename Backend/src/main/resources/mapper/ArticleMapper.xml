<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ArticleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.demo.model.Article">
        <id column="articleId" property="articleId" />
        <result column="userId" property="userId" />
        <result column="title" property="title" />
        <result column="description" property="description" />
        <result column="content" property="content" />
        <result column="contentFormat" property="contentFormat" />
        <result column="readNum" property="readNum" />
        <result column="likeNum" property="likeNum" />
        <result column="cover" property="cover" />
        <result column="appendix" property="appendix" />
        <result column="createTime" property="createTime" />
        <result column="updateTime" property="updateTime" />
        <result column="categoryId" property="categoryId" />
        <result column="isPublic" property="isPublic" />
        <result column="isTop" property="isTop" />
    </resultMap>

    <resultMap id="WithTagList" type="com.example.demo.model.ArticleVO" extends="BaseResultMap">
        <association property="tagList" column="{linkId=articleId}" select="com.example.demo.dao.TagMapper.listByLinkId"/>
    </resultMap>

    <sql id="homeArticleColumn">
        articleId,userId,title,description,readNum,likeNum,cover,createTime,updateTime,isPublic,isTop
    </sql>

    <select id="listArticleVo" resultType="com.example.demo.model.ArticleVO">
        select * from article order by createTime desc
    </select>

    <select id="queryPageCondition" resultMap="WithTagList">
        select <include refid="homeArticleColumn"/> from article
        <where>
            <if test="params.categoryId !=null and params.categoryId != ''">
                and find_in_set(#{params.categoryId},categoryId) and isPublic = true
            </if>
        </where>
        <if test="params.latest !=null and params.latest != ''">
            order by isTop desc,createTime desc
        </if>
        <if test="params.favorite !=null and params.favorite != ''">
            order by isTop desc,likeNum desc
        </if>
    </select>
    <select id="queryPageCondition2" resultMap="WithTagList">
        select <include refid="homeArticleColumn"/> from article
        <where>
            userId = #{userId}
            <if test="params.categoryId !=null and params.categoryId != ''">
                and find_in_set(#{params.categoryId},categoryId)
            </if>
        </where>
        <if test="params.latest !=null and params.latest != ''">
            order by isTop desc,createTime desc
        </if>
        <if test="params.favorite !=null and params.favorite != ''">
            order by isTop desc,likeNum desc
        </if>
    </select>

    <update id="updateReadNum">
        update article set readNum = readNum + 1 where articleId = #{id}
    </update>

    <select id="getSimpleArticleVo" resultType="com.example.demo.model.ArticleVO">
        select <include refid="homeArticleColumn"/> from article where articleId = #{id}
    </select>

    <select id="checkByCategory" resultType="Integer">
        select count(*) from article where categoryId = #{categoryId}
    </select>

    <select id="hotArticles" resultType="com.example.demo.model.ArticleVO">
        select * from article where isPublic = true order by readNum desc limit 5
    </select>

    <select id="hotArticlesUser" resultType="com.example.demo.model.ArticleVO">
        select * from article where userId = #{userId} and isPublic = true  order by readNum desc limit 5
    </select>

    <select id="newArticles" resultType="com.example.demo.model.ArticleVO">
        select * from article where isPublic = true order by createTime desc limit 5
    </select>

    <select id="newArticlesUser" resultType="com.example.demo.model.ArticleVO">
        select * from article where userId = #{userId} and isPublic = true order by createTime desc limit 5
    </select>

    <select id="getTimelinePost" resultType="com.example.demo.model.TimelinePost">
        select title,description,updateTime from article where userId = #{userId}
    </select>

    <select id="allPublic" resultType="com.example.demo.model.Article">
        select * from article where isPublic = true
    </select>

</mapper>
